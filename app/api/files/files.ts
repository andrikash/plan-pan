/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Calendar Service API
 * API for managing chat, orders and payments.
 * OpenAPI spec version: 1.0.0
 */
import {
  useMutation
} from '@tanstack/react-query';
import type {
  MutationFunction,
  QueryClient,
  UseMutationOptions,
  UseMutationResult
} from '@tanstack/react-query';

import axios from 'axios';
import type {
  AxiosError,
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

import type {
  PostApiFilesGet200,
  PostApiFilesGet400,
  PostApiFilesGet500,
  PostApiFilesGetBody
} from '../../types/api';





/**
 * @summary Generate a pre-signed URL for file download.
 */
export const postApiFilesGet = (
    postApiFilesGetBody: PostApiFilesGetBody, options?: AxiosRequestConfig
 ): Promise<AxiosResponse<PostApiFilesGet200>> => {
    
    
    return axios.post(
      `https://dev-api.planandpan.com/api/files/get`,
      postApiFilesGetBody,options
    );
  }



export const getPostApiFilesGetMutationOptions = <TError = AxiosError<PostApiFilesGet400 | PostApiFilesGet500>,
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof postApiFilesGet>>, TError,{data: PostApiFilesGetBody}, TContext>, axios?: AxiosRequestConfig}
): UseMutationOptions<Awaited<ReturnType<typeof postApiFilesGet>>, TError,{data: PostApiFilesGetBody}, TContext> => {

const mutationKey = ['postApiFilesGet'];
const {mutation: mutationOptions, axios: axiosOptions} = options ?
      options.mutation && 'mutationKey' in options.mutation && options.mutation.mutationKey ?
      options
      : {...options, mutation: {...options.mutation, mutationKey}}
      : {mutation: { mutationKey, }, axios: undefined};

      


      const mutationFn: MutationFunction<Awaited<ReturnType<typeof postApiFilesGet>>, {data: PostApiFilesGetBody}> = (props) => {
          const {data} = props ?? {};

          return  postApiFilesGet(data,axiosOptions)
        }

        


  return  { mutationFn, ...mutationOptions }}

    export type PostApiFilesGetMutationResult = NonNullable<Awaited<ReturnType<typeof postApiFilesGet>>>
    export type PostApiFilesGetMutationBody = PostApiFilesGetBody
    export type PostApiFilesGetMutationError = AxiosError<PostApiFilesGet400 | PostApiFilesGet500>

    /**
 * @summary Generate a pre-signed URL for file download.
 */
export const usePostApiFilesGet = <TError = AxiosError<PostApiFilesGet400 | PostApiFilesGet500>,
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof postApiFilesGet>>, TError,{data: PostApiFilesGetBody}, TContext>, axios?: AxiosRequestConfig}
 , queryClient?: QueryClient): UseMutationResult<
        Awaited<ReturnType<typeof postApiFilesGet>>,
        TError,
        {data: PostApiFilesGetBody},
        TContext
      > => {

      const mutationOptions = getPostApiFilesGetMutationOptions(options);

      return useMutation(mutationOptions , queryClient);
    }
    